drop policy "Enable read for users based on user_id" on "public"."charges";

create table "public"."wallets" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "currency" text not null,
    "balance" real default '0'::real,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "icon" text not null
);


alter table "public"."wallets" enable row level security;

alter table "public"."charges" drop column "title";

alter table "public"."charges" add column "name" text not null;

CREATE UNIQUE INDEX wallets_pkey ON public.wallets USING btree (id);

alter table "public"."wallets" add constraint "wallets_pkey" PRIMARY KEY using index "wallets_pkey";

alter table "public"."wallets" add constraint "public_wallets_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."wallets" validate constraint "public_wallets_user_id_fkey";

alter table "public"."wallets" add constraint "wallets_currency_check" CHECK ((length(currency) = 1)) not valid;

alter table "public"."wallets" validate constraint "wallets_currency_check";

grant delete on table "public"."wallets" to "anon";

grant insert on table "public"."wallets" to "anon";

grant references on table "public"."wallets" to "anon";

grant select on table "public"."wallets" to "anon";

grant trigger on table "public"."wallets" to "anon";

grant truncate on table "public"."wallets" to "anon";

grant update on table "public"."wallets" to "anon";

grant delete on table "public"."wallets" to "authenticated";

grant insert on table "public"."wallets" to "authenticated";

grant references on table "public"."wallets" to "authenticated";

grant select on table "public"."wallets" to "authenticated";

grant trigger on table "public"."wallets" to "authenticated";

grant truncate on table "public"."wallets" to "authenticated";

grant update on table "public"."wallets" to "authenticated";

grant delete on table "public"."wallets" to "service_role";

grant insert on table "public"."wallets" to "service_role";

grant references on table "public"."wallets" to "service_role";

grant select on table "public"."wallets" to "service_role";

grant trigger on table "public"."wallets" to "service_role";

grant truncate on table "public"."wallets" to "service_role";

grant update on table "public"."wallets" to "service_role";

create policy "Enable all for users based on user_id"
on "public"."charges"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable all for users based on user_id"
on "public"."wallets"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));



